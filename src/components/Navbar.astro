---
import { Image } from 'astro:assets';
import headerLogo from '../assets/header-logo.svg';
import contact from '../config/contact';
const menuItems = [
  { name: 'Apartamente', href: '/apartamente' },
  { name: 'Locație', href: '/locatie' },
  { name: 'Stadiu Șantier', href: '/noutati' },
  { name: 'Contact', href: '/contact' },
];
---

<nav class="fixed w-full h-[70px] z-50 bg-main">
  <div class="flex justify-between items-center h-full px-6 md:px-[70px]">
    <div class="flex-shrink-0 flex items-center">
      <a href="/" aria-label="Acasă">
        <Image src={headerLogo} alt="Nosto Logo" height={50} />
      </a>
    </div>
    <div class="hidden sm:flex sm:items-center">
      {
        menuItems.map((item) => (
          <a
            href={item.href}
            class="px-5 py-2 text-xl heading-font hover:text-[var(--color-bg-secondary)] hover:underline transition-colors"
          >
            {item.name}
          </a>
        ))
      }
      <a href={`tel:${contact.phone}`} class="btn-primary ml-6">SUNĂ ACUM</a>
    </div>
    <div class="flex items-center sm:hidden">
      <button
        type="button"
        class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-primary"
      >
        <span class="sr-only">Open main menu</span>
        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>
  </div>

  <div
    class="sm:hidden mobile-menu hidden bg-white absolute w-full top-[70px] left-0 shadow-lg transform transition-all duration-300 ease-in-out opacity-0 translate-y-[-10px]"
  >
    <div class="px-4 pt-4 pb-6 space-y-3">
      {
        menuItems.map((item) => (
          <a
            href={item.href}
            class="block px-4 py-3 text-lg font-light heading-font text-black hover:text-[var(--color-bg-secondary)] hover:underline hover:bg-gray-50 rounded-md transition-colors"
          >
            {item.name}
          </a>
        ))
      }
      <div class="pt-2">
        <a href="tel:123456789" class="btn-primary">SUNĂ ACUM</a>
      </div>
    </div>
  </div>

  <script is:inline>
    function toggleMobileMenu() {
      const mobileMenu = document.querySelector('.mobile-menu');

      if (mobileMenu) {
        // If menu is currently hidden, show it with animation
        if (mobileMenu.classList.contains('hidden')) {
          // First remove hidden to make it visible
          mobileMenu.classList.remove('hidden');

          // Force a reflow to ensure the transition works
          void mobileMenu.offsetWidth;

          // Then add the visible styles
          mobileMenu.classList.add('opacity-100', 'translate-y-0');
          mobileMenu.classList.remove('opacity-0', 'translate-y-[-10px]');
        } else {
          // Hide with animation
          mobileMenu.classList.remove('opacity-100', 'translate-y-0');
          mobileMenu.classList.add('opacity-0', 'translate-y-[-10px]');

          // After animation completes, hide the element
          setTimeout(() => {
            mobileMenu.classList.add('hidden');
          }, 300); // Match this to your transition duration
        }
      }
    }

    function setupMobileMenu() {
      const mobileMenuButton = document.querySelector('.mobile-menu-button');
      const mobileMenu = document.querySelector('.mobile-menu');

      if (mobileMenuButton) {
        // Check if a listener is already attached to this specific button instance
        if (!mobileMenuButton.hasAttribute('data-menu-listener-attached')) {
          mobileMenuButton.addEventListener('click', toggleMobileMenu);
          mobileMenuButton.setAttribute('data-menu-listener-attached', 'true');
        }
      }

      // Close menu when clicking outside
      document.addEventListener('click', (e) => {
        if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
          // Check if click is outside the menu and the menu button
          if (!mobileMenu.contains(e.target) && !e.target.closest('.mobile-menu-button')) {
            toggleMobileMenu();
          }
        }
      });
    }

    // Setup for the initial page load
    setupMobileMenu();

    // Setup after each Astro page transition
    document.addEventListener('astro:page-load', setupMobileMenu);
  </script>
</nav>
