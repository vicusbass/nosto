---
import type { SanityDocument } from '@sanity/client';
import { sanityClient } from 'sanity:client';
import Layout from '../../layouts/Layout.astro';
import { PortableText } from 'astro-portabletext';
import { Image } from 'astro:assets';
import urlForImage from '../../utils/sanityImageUrl';

const slug = Astro.params.slug;
if (!slug) {
  throw new Error('Slug parameter is missing.');
}

const POST_QUERY = `*[_type == "newsPost" && slug.current == $slug][0]`;
const post = await sanityClient.fetch<SanityDocument>(POST_QUERY, { slug });

export async function getStaticPaths() {
  const SLUGS_QUERY = `*[_type == "newsPost" && defined(slug.current)]{
    "params": {"slug": slug.current}
  }`;
  const paths = await sanityClient.fetch<{ params: { slug: string } }[]>(SLUGS_QUERY);
  return paths;
}

const imageBuilder = post?.image ? urlForImage(post.image) : null;
const postImageUrl = imageBuilder?.url();
---

<Layout title={post?.title ?? 'Post not found'}>
  <div class="container mx-auto px-4 py-8">
    {
      post ? (
        <article class="relative max-w-3xl mx-auto p-6">
          <a
            href="/noutati"
            class="absolute top-4 right-4 bg-white text-gray-700 hover:text-black shadow-lg hover:shadow-xl rounded-full w-10 h-10 md:w-12 md:h-12 flex items-center justify-center text-2xl md:text-3xl font-bold z-10 transition-all duration-150 ease-in-out transform hover:scale-105"
            aria-label="Close and return to Noutati page"
          >
            &times;
          </a>
          <div class="mt-8 md:mt-10">
            {postImageUrl && (
              <div class="mb-8">
                <Image
                  src={postImageUrl}
                  alt={post.title ?? 'Post image'}
                  class="aspect-video w-full max-w-2xl mx-auto rounded-xl object-cover shadow-lg"
                  inferSize={true}
                />
              </div>
            )}
            <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-4 text-center">
              {post.title}
            </h2>
            <div class="text-center text-gray-500 mb-8">
              {post.date ? new Date(post.date).toLocaleDateString('ro-RO') : 'Date not available'}
              <div class="prose prose-lg max-w-none mx-auto">
                {Array.isArray(post.text) ? (
                  <PortableText value={post.text} />
                ) : (
                  <p>Invalid format for content.</p>
                )}
              </div>
            </div>
          </div>
        </article>
      ) : (
        <p class="text-center text-xl text-red-500">Post not found.</p>
      )
    }
  </div>
</Layout>
